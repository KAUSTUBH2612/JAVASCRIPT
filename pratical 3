<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Number Guessing Game</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }
        
        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }
        
        .shake {
            animation: shake 0.3s ease-in-out;
        }
        
        .pulse {
            animation: pulse 0.5s ease-in-out;
        }
        
        .glow {
            box-shadow: 0 0 15px rgba(59, 130, 246, 0.7);
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-900 to-purple-900 min-h-screen flex items-center justify-center p-4">
    <div class="max-w-md w-full mx-auto bg-white/80 backdrop-blur-sm rounded-2xl overflow-hidden shadow-xl">
        <!-- Game header with decorative elements -->
        <div class="relative">
            <img src="https://placehold.co/800x300" alt="Abstract digital numbers floating in space with glowing effects" class="w-full h-48 object-cover opacity-90" />
            <div class="absolute inset-0 bg-gradient-to-t from-blue-900/60 to-transparent flex items-center justify-center">
                <h1 class="text-4xl md:text-5xl font-bold text-white drop-shadow-lg">Guess the Number</h1>
            </div>
        </div>
        
        <!-- Main game container -->
        <div class="p-6 md:p-8 space-y-6">
            <div class="text-center">
                <p class="text-gray-700 mb-4">I'm thinking of a number between 1 and 100. Can you guess it?</p>
                
                <!-- Attempt counter -->
                <div class="mb-6 flex justify-center items-center">
                    <div class="bg-blue-100 text-blue-800 px-4 py-2 rounded-full text-sm font-medium flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                        </svg>
                        <span id="attempts">0</span> attempts
                    </div>
                </div>
                
                <!-- User input area -->
                <div class="flex flex-col sm:flex-row gap-2 justify-center">
                    <input type="number" id="guessInput" 
                           class="flex-1 px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" 
                           min="1" max="100" placeholder="Enter your guess">
                    <button id="submitGuess" 
                            class="px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition duration-200 flex items-center justify-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13a1 1 0 102 0V9.414l1.293 1.293a1 1 0 001.414-1.414z" clip-rule="evenodd" />
                        </svg>
                        Submit
                    </button>
                </div>
            </div>
            
            <!-- Feedback area -->
            <div id="feedback" class="min-h-16 text-center">
                <div id="hint" class="hidden p-4 rounded-lg transition-all duration-300 bg-gray-100">
                    <p class="text-gray-700">Make your first guess!</p>
                </div>
            </div>
            
            <!-- Previous guesses -->
            <div id="prevGuesses" class="hidden">
                <p class="text-sm text-gray-500 mb-2">Your previous guesses:</p>
                <div id="guessList" class="flex flex-wrap gap-2 max-h-32 overflow-y-auto p-2 bg-gray-100 rounded-lg"></div>
            </div>
        </div>
    </div>
    
    <!-- Victory modal -->
    <div id="victoryModal" class="fixed inset-0 bg-black/50 flex items-center justify-center p-4 hidden z-50">
        <div class="bg-white rounded-xl max-w-sm w-full mx-auto overflow-hidden shadow-2xl text-center glow">
            <img src="https://placehold.co/600x300" alt="Confetti and celebration with golden trophy and success message" class="w-full h-48 object-cover" />
            <div class="p-6 space-y-4 pulse">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 mx-auto text-yellow-500" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                </svg>
                <h2 class="text-2xl font-bold text-gray-800">Congratulations!</h2>
                <p id="victoryText" class="text-gray-600">You guessed the number in <span class="font-bold">0</span> attempts!</p>
                <p class="text-sm text-gray-500">The number was <span id="correctNumber" class="font-bold">42</span>.</p>
                <button id="playAgain" class="mt-4 px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition duration-200">
                    Play Again
                </button>
            </div>
        </div>
    </div>
    
    <script>
        // Game state
        let targetNumber = Math.floor(Math.random() * 100) + 1;
        let attempts = 0;
        const maxAttempts = 10;
        const previousGuesses = [];
        
        // DOM elements
        const guessInput = document.getElementById('guessInput');
        const submitBtn = document.getElementById('submitGuess');
        const hintElement = document.getElementById('hint');
        const feedbackElement = document.getElementById('feedback');
        const attemptsElement = document.getElementById('attempts');
        const prevGuessesElement = document.getElementById('prevGuesses');
        const guessListElement = document.getElementById('guessList');
        const victoryModal = document.getElementById('victoryModal');
        const victoryText = document.getElementById('victoryText');
        const correctNumberElement = document.getElementById('correctNumber');
        const playAgainBtn = document.getElementById('playAgain');
        
        // Initial setup
        hintElement.classList.remove('hidden');
        
        // Event listeners
        submitBtn.addEventListener('click', checkGuess);
        playAgainBtn.addEventListener('click', resetGame);
        guessInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                checkGuess();
            }
        });
        
        // Game functions
        function checkGuess() {
            const userGuess = parseInt(guessInput.value);
            
            // Validate input
            if (isNaN(userGuess) || userGuess < 1 || userGuess > 100) {
                showFeedback('Please enter a number between 1 and 100', 'error');
                addShake();
                return;
            }
            
            // Process valid guess
            attempts++;
            attemptsElement.textContent = attempts;
            previousGuesses.push(userGuess);
            updatePreviousGuesses();
            
            if (userGuess === targetNumber) {
                showVictory();
            } else if (userGuess < targetNumber) {
                showFeedback(`Too low! Try a higher number.`, 'low');
            } else {
                showFeedback(`Too high! Try a lower number.`, 'high');
            }
            
            // Clear input
            guessInput.value = '';
            guessInput.focus();
        }
        
        function showFeedback(message, type) {
            hintElement.classList.remove('hidden');
            hintElement.textContent = message;
            hintElement.className = `p-4 rounded-lg transition-all duration-300 ${getFeedbackClass(type)}`;
            
            prevGuessesElement.classList.remove('hidden');
            addPulse();
        }
        
        function getFeedbackClass(type) {
            switch(type) {
                case 'error': return 'bg-red-100 text-red-700';
                case 'low': return 'bg-blue-100 text-blue-700';
                case 'high': return 'bg-orange-100 text-orange-700';
                default: return 'bg-gray-100 text-gray-700';
            }
        }
        
        function updatePreviousGuesses() {
            guessListElement.innerHTML = '';
            previousGuesses.forEach(guess => {
                const guessElement = document.createElement('div');
                guessElement.className = 'px-3 py-1 rounded-full text-xs font-medium flex items-center';
                
                if (guess < targetNumber) {
                    guessElement.className += ' bg-blue-100 text-blue-800';
                    guessElement.innerHTML = `${guess} <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 ml-1" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd" /></svg>`;
                } else if (guess > targetNumber) {
                    guessElement.className += ' bg-orange-100 text-orange-800';
                    guessElement.innerHTML = `${guess} <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 ml-1" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" /></svg>`;
                }
                
                guessListElement.appendChild(guessElement);
            });
        }
        
        function showVictory() {
            victoryText.innerHTML = `You guessed the number in <span class="font-bold">${attempts}</span> attempt${attempts !== 1 ? 's' : ''}!`;
            correctNumberElement.textContent = targetNumber;
            victoryModal.classList.remove('hidden');
        }
        
        function resetGame() {
            targetNumber = Math.floor(Math.random() * 100) + 1;
            attempts = 0;
            previousGuesses.length = 0;
            
            attemptsElement.textContent = attempts;
            guessInput.value = '';
            hintElement.textContent = "Make your first guess!";
            hintElement.className = "hidden p-4 rounded-lg transition-all duration-300 bg-gray-100";
            guessListElement.innerHTML = '';
            prevGuessesElement.classList.add('hidden');
            victoryModal.classList.add('hidden');
            
            guessInput.focus();
        }
        
        function addShake() {
            feedbackElement.classList.add('shake');
            setTimeout(() => {
                feedbackElement.classList.remove('shake');
            }, 300);
        }
        
        function addPulse() {
            feedbackElement.classList.add('pulse');
            setTimeout(() => {
                feedbackElement.classList.remove('pulse');
            }, 500);
        }
    </script>
</body>
</html>

GEUSS GAME